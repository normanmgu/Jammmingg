{"version":3,"sources":["Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/SearchResults/SearchResults.js","Components/Playlist/Playlist.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","search","bind","handleTermChange","this","onSearch","state","term","event","setState","target","value","className","placeholder","onChange","React","Component","Track","addTrack","removeTrack","isRemoval","onClick","onAdd","track","onRemove","name","artist","album","renderAction","TrackList","tracks","map","id","SearchResults","searchResults","Playlist","handleNameChange","onNameChange","defaultValue","playListTracks","onSave","App","updatePlayListName","savePlaylist","playListName","find","savedTrack","push","filter","currentTrack","uri","searchTerm","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6d77755.chunk.js","sourcesContent":["import React from 'react';\nimport './SearchBar.css';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.search = this.search.bind(this);\n    this.handleTermChange = this.handleTermChange.bind(this);\n  }\n  search() {\n    this.props.onSearch(this.state.term);\n  }\n  handleTermChange(event) {\n    this.setState(\n      {term: event.target.value}\n    )\n  }\n  render() {\n    return (\n    <div className=\"SearchBar\">\n      <input \n        className=\"Bar\" \n        placeholder=\"Enter a Song, Album, or Artist\" \n        onChange={this.handleTermChange} />\n      <button className=\"SearchButton\">SEARCH</button>\n    </div>\n    )\n  }\n}\nexport default SearchBar;","import React from 'react';\nimport './Track.css';\n\nclass Track extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n  }\n  renderAction() {\n    if (this.props.isRemoval) {\n      return <button className=\"Track-action\" onClick={this.removeTrack}>-</button>;\n    } else {\n      return <button className=\"Track-action\" onClick={this.addTrack}>+</button>;\n    }\n  }\n  addTrack() {\n    this.props.onAdd(this.props.track);\n  }\n  removeTrack() {\n    this.props.onRemove(this.props.track);\n  }\n  render() {\n    return (\n      <div className=\"Track\">\n        <div className=\"Track-information\">\n          <h3>{this.props.track.name}</h3>\n          <p>{this.props.track.artist} | {this.props.track.album}</p>\n        </div>\n        {this.renderAction()}\n      </div>\n    )\n  }\n}\nexport default Track;","import React from 'react';\n//import Track Component\nimport './TrackList.css';\nimport Track from '../Track/Track';\n\nclass TrackList extends React.Component {\n  render() {\n    return (\n    <div className=\"TrackList\">\n      {/* Add a map method that renders a set of Track Components */}\n      {\n        this.props.tracks.map(track => {\n          return <Track \n          track={track}\n          key={track.id} \n          onAdd={this.props.onAdd}\n          onRemove={this.props.onRemove}\n          isRemoval={this.props.isRemoval}\n          />\n        })\n      }\n    </div> \n    )\n  }\n}\n\nexport default TrackList;\n","import React from 'react'\nimport './SearchResults.css';\nimport TrackList from '../TrackList/TrackList';\n\nclass SearchResults extends React.Component {\n  render() {\n    return (\n      <div className=\"SearchResults\">\n        <h2>Results</h2>\n        <TrackList \n        tracks={this.props.searchResults}\n        onAdd={this.props.onAdd}\n        isRemoval={false}\n         />\n      </div>\n    )\n  }\n}\n\nexport default SearchResults","import React from 'react';\nimport './Playlist.css';\nimport TrackList from '../TrackList/TrackList';\n\nclass Playlist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleNameChange = this.handleNameChange.bind(this);\n  }\n  handleNameChange(event) {\n    this.props.onNameChange(event.target.value);\n  }\n  render() {\n    return (\n    <div className=\"Playlist\">\n      <input \n        defaultValue={'New Playlist'}\n        onChange={this.handleNameChange}\n        ></input>\n      {/* Add a TrackList Component */}\n      <TrackList \n      tracks={this.props.playListTracks}\n      onRemove={this.props.onRemove}\n      isRemoval={true}\n      />\n      <button \n      className=\"Playlist-save\"\n      onClick={this.props.onSave}\n      >SAVE TO SPOTIFY</button>\n    </div>\n    )\n  }\n}\nexport default Playlist;","import './App.css';\n//we need to import Playlist, SeachBar, and SearchResults components\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlayListName = this.updatePlayListName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n    this.state = {\n      searchResults: [\n        {name: 'name1', artist: 'artist1', album: 'album1', id: 1},\n        {name: 'name2', artist: 'artist2', album: 'album2', id: 2},\n        {name: 'name3', artist: 'artist3', album: 'album3', id: 3}\n      ],\n      playListName: 'My Playlist',\n      playListTracks: [\n        {name: 'playList1', artist: 'playlistArtist1', album: 'playlistAlbum1', id: 4},\n        {name: 'playList2', artist: 'playlistArtist2', album: 'playlistAlbum2', id: 5},\n        {name: 'playList3', artist: 'playlistArtist3', album: 'playlistAlbum3', id: 6},\n      ]\n    }\n  }\n  addTrack(track) {\n    // Makes sures the track is not already added to the playlist to avoid duplicates\n    let tracks = this.state.playListTracks;\n    if(tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    } else {\n      tracks.push(track);\n      this.setState(\n        {playListTracks: tracks}\n      )\n    }\n  }\n  removeTrack(track) {\n    let tracks = this.state.playListTracks;\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n    this.setState(\n      {playListTracks: tracks}\n    );\n  }\n  updatePlayListName(name) {\n    this.setState(\n      {playListName: name}\n    )\n  }\n  savePlaylist() {\n    const trackUris = this.state.playListTracks.map(track => track.uri);\n  }\n  search(searchTerm) {\n    console.log(searchTerm);  \n  }\n  render(){\n   return (\n    <div>\n      <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n      <div className=\"App\">\n        <SearchBar \n            onSearch={this.search}\n        />\n        <div className=\"App-playlist\">\n          <SearchResults \n            searchResults={this.state.searchResults} \n            onAdd={this.addTrack}\n          />\n          <Playlist\n            playListName={this.state.playListName}\n            playListTracks={this.state.playListTracks}\n            onRemove={this.removeTrack}\n            onNameChange={this.updatePlayListName}\n            onSave={this.savePlaylist}\n            />\n        </div>\n      </div>\n    </div>\n    ) \n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Components/App/App.css';\nimport App from './Components/App/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}